# Arquitetura de produção escalável para BlueMonitor
# Este arquivo deve ser salvo como: deployment/docker/docker-compose.prod.yml

version: '3.8'

services:
  # Load Balancer
  nginx:
    image: nginx:alpine
    container_name: bluemonitor-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - api-1
      - api-2
      - api-3
    networks:
      - frontend
      - backend
    restart: unless-stopped

  # API Instances (Horizontal Scaling)
  api-1:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile.prod
    container_name: bluemonitor-api-1
    environment:
      - INSTANCE_ID=api-1
      - MONGODB_URL=mongodb://mongodb-primary:27017,mongodb-secondary:27017/?replicaSet=rs0
      - REDIS_URL=redis://redis-cluster:6379
      - CELERY_BROKER_URL=redis://redis-cluster:6379/1
      - CELERY_RESULT_BACKEND=redis://redis-cluster:6379/2
    volumes:
      - ../../logs:/app/logs
      - ../../models:/app/models:ro
    depends_on:
      - mongodb-primary
      - redis-cluster
    networks:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  api-2:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile.prod
    container_name: bluemonitor-api-2
    environment:
      - INSTANCE_ID=api-2
      - MONGODB_URL=mongodb://mongodb-primary:27017,mongodb-secondary:27017/?replicaSet=rs0
      - REDIS_URL=redis://redis-cluster:6379
      - CELERY_BROKER_URL=redis://redis-cluster:6379/1
      - CELERY_RESULT_BACKEND=redis://redis-cluster:6379/2
    volumes:
      - ../../logs:/app/logs
      - ../../models:/app/models:ro
    depends_on:
      - mongodb-primary
      - redis-cluster
    networks:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  api-3:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile.prod
    container_name: bluemonitor-api-3
    environment:
      - INSTANCE_ID=api-3
      - MONGODB_URL=mongodb://mongodb-primary:27017,mongodb-secondary:27017/?replicaSet=rs0
      - REDIS_URL=redis://redis-cluster:6379
      - CELERY_BROKER_URL=redis://redis-cluster:6379/1
      - CELERY_RESULT_BACKEND=redis://redis-cluster:6379/2
    volumes:
      - ../../logs:/app/logs
      - ../../models:/app/models:ro
    depends_on:
      - mongodb-primary
      - redis-cluster
    networks:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Celery Workers (CPU-intensive tasks)
  celery-worker-cpu:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile.worker
    container_name: bluemonitor-worker-cpu
    command: celery -A app.celery worker -Q cpu_tasks -c 4 --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis-cluster:6379/1
      - CELERY_RESULT_BACKEND=redis://redis-cluster:6379/2
      - MONGODB_URL=mongodb://mongodb-primary:27017,mongodb-secondary:27017/?replicaSet=rs0
      - WORKER_TYPE=cpu
    volumes:
      - ../../logs:/app/logs
      - ../../models:/app/models:ro
    depends_on:
      - redis-cluster
      - mongodb-primary
    networks:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'

  # Celery Workers (I/O-intensive tasks)
  celery-worker-io:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile.worker
    container_name: bluemonitor-worker-io
    command: celery -A app.celery worker -Q io_tasks -c 10 --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis-cluster:6379/1
      - CELERY_RESULT_BACKEND=redis://redis-cluster:6379/2
      - MONGODB_URL=mongodb://mongodb-primary:27017,mongodb-secondary:27017/?replicaSet=rs0
      - WORKER_TYPE=io
    volumes:
      - ../../logs:/app/logs
    depends_on:
      - redis-cluster
      - mongodb-primary
    networks:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile.worker
    container_name: bluemonitor-beat
    command: celery -A app.celery beat --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis-cluster:6379/1
      - CELERY_RESULT_BACKEND=redis://redis-cluster:6379/2
      - MONGODB_URL=mongodb://mongodb-primary:27017,mongodb-secondary:27017/?replicaSet=rs0
    volumes:
      - ../../logs:/app/logs
      - ./celery-beat