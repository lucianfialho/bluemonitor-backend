version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bluemonitor-api
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
    ports:
      - "${PORT:-8000}:8000"
    volumes:
      - ./app:/app/app
      - ./models:/app/models
      - ./tests:/app/tests
      - ./.env:/app/.env:ro
    depends_on:
      - mongodb
    networks:
      - bluemonitor-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  mongodb:
    image: mongo:6.0
    container_name: bluemonitor-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=${MONGODB_DB_NAME:-bluemonitor}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    ports:
      - "27017:27017"
    networks:
      - bluemonitor-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "'db.runCommand({ ping: 1 }).ok'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo-express:
    image: mongo-express
    container_name: bluemonitor-mongo-express
    restart: unless-stopped
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=password
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - bluemonitor-network

  redis:
    image: redis:7-alpine
    container_name: bluemonitor-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bluemonitor-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  bluemonitor-network:
    driver: bridge

volumes:
  mongodb_data:
  mongodb_config:
  redis_data:
